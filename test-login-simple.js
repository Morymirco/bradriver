const { createClient } = require('@supabase/supabase-js');

// Configuration Supabase
const SUPABASE_URL = 'https://jeumizxzlwjvgerrcpjr.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpldW1penh6bHdqdmdlcnJjcGpyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA1NTczNjEsImV4cCI6MjA2NjEzMzM2MX0.KnkibttgTcUkz0KZYzRxTeybghlCj_VnnVlcDyUFZ-Q';

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

// Identifiants du chauffeur cr√©√©
const testCredentials = {
  email: 'xafopi3925@cspaus.com',
  password: 'JUT3zitPr&2N'
};

async function testDriverLogin() {
  console.log('üß™ Test de connexion chauffeur');
  console.log('==============================');
  console.log(`Email: ${testCredentials.email}`);
  console.log(`Mot de passe: ${testCredentials.password}`);
  
  try {
    // Test de connexion
    console.log('\n1. Tentative de connexion...');
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: testCredentials.email,
      password: testCredentials.password
    });

    if (authError) {
      throw new Error(`‚ùå Erreur de connexion: ${authError.message}`);
    }

    if (!authData.user) {
      throw new Error('‚ùå Connexion √©chou√©e - pas d\'utilisateur retourn√©');
    }

    console.log('‚úÖ Connexion r√©ussie!');
    console.log('   - User ID:', authData.user.id);
    console.log('   - Email:', authData.user.email);
    console.log('   - Email confirm√©:', authData.user.email_confirmed_at ? 'Oui' : 'Non');

    // Test de r√©cup√©ration du profil utilisateur
    console.log('\n2. R√©cup√©ration du profil utilisateur...');
    const { data: userProfile, error: userError } = await supabase
      .from('user_profiles')
      .select(`
        id,
        name,
        email,
        phone_number,
        is_active,
        is_verified,
        role_id,
        user_roles (
          name
        )
      `)
      .eq('id', authData.user.id)
      .single();

    if (userError || !userProfile) {
      throw new Error(`‚ùå Profil utilisateur non trouv√©: ${userError?.message}`);
    }

    console.log('‚úÖ Profil utilisateur r√©cup√©r√©:');
    console.log('   - Nom:', userProfile.name);
    console.log('   - Email:', userProfile.email);
    console.log('   - R√¥le:', userProfile.user_roles?.name);
    console.log('   - Actif:', userProfile.is_active);

    // Test de r√©cup√©ration du profil chauffeur
    console.log('\n3. R√©cup√©ration du profil chauffeur...');
    const { data: driver, error: driverError } = await supabase
      .from('driver_profiles')
      .select(`
        id,
        name,
        email,
        type,
        vehicle_type,
        vehicle_plate,
        is_active,
        is_available
      `)
      .eq('id', authData.user.id)
      .single();

    if (driverError || !driver) {
      throw new Error(`‚ùå Profil chauffeur non trouv√©: ${driverError?.message}`);
    }

    console.log('‚úÖ Profil chauffeur r√©cup√©r√©:');
    console.log('   - Type:', driver.type);
    console.log('   - V√©hicule:', driver.vehicle_type);
    console.log('   - Plaque:', driver.vehicle_plate);
    console.log('   - Actif:', driver.is_active);
    console.log('   - Disponible:', driver.is_available);

    // D√©connexion
    console.log('\n4. D√©connexion...');
    await supabase.auth.signOut();
    console.log('‚úÖ D√©connexion r√©ussie');

    console.log('\nüéâ TEST DE CONNEXION R√âUSSI!');
    console.log('=============================');
    console.log('‚úÖ Le chauffeur peut maintenant se connecter dans bradriver');
    console.log('‚úÖ Tous les profils sont correctement configur√©s');
    console.log('‚úÖ Les permissions RLS fonctionnent correctement');

  } catch (error) {
    console.error('\n‚ùå ERREUR LORS DU TEST DE CONNEXION:');
    console.error('====================================');
    console.error(error.message);
    
    console.error('\nüîß Actions recommand√©es:');
    console.error('1. V√©rifier que l\'email est correct');
    console.error('2. V√©rifier que le mot de passe est correct');
    console.error('3. V√©rifier que le compte est actif dans Supabase');
    console.error('4. V√©rifier les permissions RLS');
  }
}

// Ex√©cuter le test
testDriverLogin();
